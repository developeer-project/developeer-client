generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  user_profile  UserProfile?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserProfile {
  id             Int        @id @default(autoincrement())
  name           String
  college_name   String
  bio            String?
  location       String
  interests      String[]
  user_id        String     @unique
  has_registered Boolean    @default(false)
  user           User       @relation(fields: [user_id], references: [id])
  skills_id      Int[]
  links          Links?
  projects       Projects[]
}

model Skills {
  id    Int    @id @default(autoincrement())
  skill String
}

model Links {
  id             Int         @id @default(autoincrement())
  portfolio_link String?
  linkedin       String?
  github         String?
  instagram      String?
  twitter        String?
  facebook       String?
  other_links    String[]
  user_id        Int         @unique
  user_profile   UserProfile @relation(fields: [user_id], references: [id])
}

model Projects {
  id              Int         @id @default(autoincrement())
  title           String
  repo_link       String
  tech_stack      String[]
  description     String
  link            String?
  user_profile_id Int
  user_profile    UserProfile @relation(fields: [user_profile_id], references: [id])
}

model TechStack {
  id         Int    @id @default(autoincrement())
  tech_stack String
}
